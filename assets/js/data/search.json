[ { "title": "Kubernetes(K8s)集群搭建", "url": "/posts/Kubernetes(K8s)%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/", "categories": "运维", "tags": "K8s, Kubernetes, 集群, containerd", "date": "2022-09-29 09:48:48 +0800", "snippet": "节点硬件配置要求 不能使用交换分区: swapoff /path/to/endpoint 物理内存不能少于1700M（除去系统占用，建议设置为2G）: free -m CPU核心数不能少于2: lscpu部署过程1、确保每个节点上 MAC 地址和 product_uuid 的唯一性# 查看 MAC 地址ip linkifconfig -a# 查看 product_uuid sudo cat /sys/class/dmi/id/product_uuid2、允许 iptables 桥接流量（可选）2.1、确保 br_netfilter 模块被加载# 查看，内核比较新的系统可能没有任何显..." }, { "title": "青藤云安全", "url": "/posts/%E9%9D%92%E8%97%A4%E4%BA%91%E5%AE%89%E5%85%A8/", "categories": "", "tags": "", "date": "2022-09-05 17:49:23 +0800", "snippet": "#自适应安全框架(ASA, Adaptive SecurityArchitecture)是Gartner于2014年提出的面向下一代的安全体系架构, 以应对云大无移智时代所面临的安全形势。" }, { "title": "零拷贝相关问题", "url": "/posts/%E9%9B%B6%E6%8B%B7%E8%B4%9D%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/", "categories": "零拷贝", "tags": "零拷贝, 直接网卡访问技术, DMA, 直接内存访问技术, sendfile, mmap, 用户态, 内核态, 用户空间, 内核空间", "date": "2022-08-03 16:32:03 +0800", "snippet": "一、基础知识 物理内存：内存条。 虚拟内存：通过内存管理技术实现的一段连续完整的虚拟内存地址空间，可能实际在物理内存上的存储是碎片化分散的。 用户空间：系统划分给每个进程运行的虚拟内存地址空间范围，每个进程独享，进程间隔离，32位和64位范围不同，一般与内核空间成3:1的比例。 内核空间：系统划分给自身内核运行的虚拟内存地址空间范围，系统内核独享，进程间共享。 系统调用：内核向上层提供的一组通用的内核资源访问接口。 用户态：代码的CPU执行特权级为R3，只能访问用户空间内的资源。 内核态：代码的CPU执行特权级为R0，能访问系统的所有资源。 上下文切换：进程通过系统调用成..." }, { "title": "Kafka的SSL加密相关问题", "url": "/posts/Kafka%E7%9A%84SSL%E5%8A%A0%E5%AF%86%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/", "categories": "KAFKA", "tags": "KAFKA, python, ssl双向加密, pem", "date": "2022-08-03 12:20:07 +0800", "snippet": "kafka使用ssl双向认证来进行集群之间包括客户端与服务端之间的通信认证，ssl双向验证可以很好的防止中间人攻击。一、ssl证书合法性校验在CA认证体系中，所有的证书都是由权威机构来颁发的。CA根证书的主要来源有两种：操作系统内置和浏览器自带。具体的证书申请验证过程如下：1、证书签名服务提供者（证书申请者）自己生成一个密钥对，然后将生成的公钥（私钥无需提交）加上组织和个人等信息提交给权威CA机构，权威CA机构审核通过后，它会先使用散列函数计算公开的明文的信息摘要，然后用它的CA私钥对信息摘要进行加密，加密生成的密文为签名密文。2、证书合法性验证一般ssl请求时，服务端在接收到客户端第一..." }, { "title": "Python2 简单字节码混淆", "url": "/posts/Python2_%E7%AE%80%E5%8D%95%E5%AD%97%E8%8A%82%E7%A0%81%E6%B7%B7%E6%B7%86/", "categories": "", "tags": "", "date": "2021-04-15 20:25:27 +0800", "snippet": "" }, { "title": "nasm学习汇编语言", "url": "/posts/nasm%E5%AD%A6%E4%B9%A0%E6%B1%87%E7%BC%96%E8%AF%AD%E8%A8%80/", "categories": "汇编", "tags": "nasm, 汇编, gcc", "date": "2021-03-19 00:00:00 +0800", "snippet": "nasm学习汇编语言环境准备 系统：linux 软件：nasm、gcc、gcc-multilib和任意文本编辑器（如vim）最简单的汇编例子编写汇编vim a.asmsection .text global main main: mov eax, 23 ret编译运行nasm -f elf a.asmgcc -m32 a.o./a.outecho $?" }, { "title": "基于Docker的Android源码编译过程", "url": "/posts/%E5%9F%BA%E4%BA%8EDocker%E7%9A%84Android%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B/", "categories": "CTF, 逆向", "tags": "Docker, Android, 源码编译", "date": "2021-03-10 00:00:00 +0800", "snippet": "基于 docker 的 Android 源码编译过程环境准备拉取 ubuntu 镜像docker pull ubuntu启动容器docker run -it ubuntu bashUbuntu 换源（可选）参照 Ubuntu 镜像使用帮助依赖安装apt install python3 axel curl# 可选，最新安装的 python3 并不会占用 python。ln -s /usr/bin/python3 /usr/bin/pythonrepo 安装curl https://storage.googleapis.com/git-repo-downloads/repo &amp;gt;..." }, { "title": "simple-unpack_攻防世界逆向题集合", "url": "/posts/simple-unpack_%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E9%80%86%E5%90%91%E9%A2%98%E9%9B%86%E5%90%88/", "categories": "CTF, 逆向", "tags": "CTF, adworld, reverse, 攻防世界", "date": "2021-03-01 00:00:00 +0800", "snippet": "simple-unpack文件file: 847be14b3e724782b658f2dda2e8045bsha1: 50825bf9b69b0e72e3342edb87d2ce3ac022c0ab查壳Die 查壳工具 该ELF文件使用UPX进行了加壳。加了壳的程序直接分析很麻烦，很不友好，只能先脱壳。脱壳直接使用linux命令upx进行脱壳操作：&amp;gt; upx -d 847be14b3e724782b658f2dda2e8045b Ultimate Packer for eXecutables ..." }, { "title": "open-source_攻防世界逆向题集合", "url": "/posts/open-source_%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E9%80%86%E5%90%91%E9%A2%98%E9%9B%86%E5%90%88/", "categories": "CTF, 逆向", "tags": "CTF, adworld, reverse, 攻防世界", "date": "2021-03-01 00:00:00 +0800", "snippet": "open-source文件file: 8b6405c25fe447fa804c6833a0d72808.csha1: 23b35fa93a496385b904e1b74d487e589c436949源码分析#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;string.h&amp;gt;int main(int argc, char *argv[]) { if (argc != 4) { printf(&quot;what?\\n&quot;); exit(1); } unsigned int f..." }, { "title": "logmein_攻防世界逆向题集合", "url": "/posts/logmein_%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E9%80%86%E5%90%91%E9%A2%98%E9%9B%86%E5%90%88/", "categories": "CTF, 逆向", "tags": "CTF, adworld, reverse, 攻防世界", "date": "2021-03-01 00:00:00 +0800", "snippet": "logmein文件file: a7554d316da840d3a381e4e8348201e9sha1: 41d8a07a1d0167d69cb0aba5e784e15368fc1fecfile 命令查看文件信息&amp;gt; file a7554d316da840d3a381e4e8348201e9a7554d316da840d3a381e4e8348201e9: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so...." }, { "title": "insanity_攻防世界逆向题集合", "url": "/posts/insanity_%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E9%80%86%E5%90%91%E9%A2%98%E9%9B%86%E5%90%88/", "categories": "CTF, 逆向", "tags": "CTF, adworld, reverse, 攻防世界", "date": "2021-03-01 00:00:00 +0800", "snippet": "insanity文件file: 428f6e6f75754fca8964d35b16a4b709sha1: 2e21f5d3bd8f2af3a1bc2cc8397b75e9e0077dfffile 命令&amp;gt; file 428f6e6f75754fca8964d35b16a4b709428f6e6f75754fca8964d35b16a4b709: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked, interpreter /lib/ld-linux.so.2, for GN..." }, { "title": "getit_攻防世界逆向题集合", "url": "/posts/getit_%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E9%80%86%E5%90%91%E9%A2%98%E9%9B%86%E5%90%88/", "categories": "CTF, 逆向", "tags": "CTF, adworld, reverse, 攻防世界", "date": "2021-03-01 00:00:00 +0800", "snippet": "getit文件file: e3dd9674429f4ce1a25c08ea799fc027sha1: efb44d3f3d503460aa9cb97ee0b2eb7d8a77551ffile 命令&amp;gt; file e3dd9674429f4ce1a25c08ea799fc027e3dd9674429f4ce1a25c08ea799fc027: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for G..." }, { "title": "Hello, CTF_攻防世界逆向题集合", "url": "/posts/HelloCTF_%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E9%80%86%E5%90%91%E9%A2%98%E9%9B%86%E5%90%88/", "categories": "CTF, 逆向", "tags": "CTF, adworld, reverse, 攻防世界", "date": "2021-03-01 00:00:00 +0800", "snippet": "Hello, CTF文件file: 18a51cbc365c488f89c9feee59868ea5.exesha1: 278c4d8f858929c14415d4c5e2274ebf33c41c65测试运行PS C:\\Users\\c\\Downloads&amp;gt; .\\18a51cbc365c488f89c9feee59868ea5.exeplease input your serial:aaaaaaaaaaaaawrong!查壳 32位程序，没有加壳。静态分析载入 IDA Pro 查看伪代码：int __cdecl main(int argc, const char **arg..." }, { "title": "VScode 插件开发", "url": "/posts/vscode%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/", "categories": "学习, VScode插件学习", "tags": "VScode, 插件", "date": "2020-08-09 22:54:41 +0800", "snippet": "Electron 介绍Electron（原名为Atom Shell）是GitHub开发的一个开源框架。它允许使用Node.js（作为后端）和Chromium（作为前端）完成桌面GUI应用程序的开发。一个基础的Electron包含三个文件： package.json（元数据） main.js（代码） index.html（图形用户界面）。框架由Electron可执行文件（Windows中为electron.exe、macOS中为electron.app、Linux中为electron）提供。" }, { "title": "Docker 搭建 PbootCMS 内容管理网站", "url": "/posts/Docker%E6%90%AD%E5%BB%BAPbootCMS%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86%E7%BD%91%E7%AB%99/", "categories": "运维", "tags": "docker, pbootcms", "date": "2020-08-09 10:31:41 +0800", "snippet": "Docker拉取需要用到的镜像docker pull eboraas/apache-phpdocker pull mysql克隆项目到本地git clone https://gitee.com/hnaoyun/PbootCMS.git启动一个 eboraas/apache-php 容器docker run --name site -d -p 8080:80 -p 8443:443 -v /path/to/PbootCMS:/var/www/html eboraas/apache-php进入容器安装php拓展# 进入容器docker exec -it site bash# 接下来的代码在容..." }, { "title": "pwndbg、pwntools环境搭建（Unix系统）", "url": "/posts/pwndbg_pwntools%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA_Unix%E7%B3%BB%E7%BB%9F_/", "categories": "学习, pwn学习", "tags": "pwn, pwntools, gdb, pwndbg", "date": "2020-08-09 10:10:32 +0800", "snippet": "pwndbg环境搭建项目地址https://github.com/pwndbg/pwndbg搭建过程1、安装环境基础 git python python-pip2、安装过程 使用git命令克隆远程项目到本地。 git clone https://github.com/pwndbg/pwndbg 进入项目根目录并执行一键安装脚本 cd pwndbg &amp;amp;&amp;amp; ./setup.sh 该脚本主要是检查了一下系统信息，然后根据系统信息自动安装了一些所需要的工具和依赖库包括gdb，当然有时需要通过源码去编译gd..." }, { "title": "基于Android Studio 编译XposedBridge源码生产用于开发插件的jar包", "url": "/posts/%E5%9F%BA%E4%BA%8EAndroid_Studio%E7%BC%96%E8%AF%91XposedBridge%E6%BA%90%E7%A0%81%E7%94%9F%E4%BA%A7%E7%94%A8%E4%BA%8E%E5%BC%80%E5%8F%91%E6%8F%92%E4%BB%B6%E7%9A%84jar%E5%8C%85/", "categories": "学习, Xposed学习", "tags": "Xposed, Android Studio, XposedBridge", "date": "2020-08-08 19:36:00 +0800", "snippet": "XposedBridge项目地址 https://github.com/rovo89/XposedBridge编译过程克隆项目源码到本地git clone https://github.com/rovo89/XposedBridge将源码导入到 Android Studio 中使用 Android Studio ：File -&amp;gt; Open -&amp;gt; 【选中项目目录】-&amp;gt; OK修改配置文件（可选）修改项目目录下的 app 目录里的 build.gradle 构建文件，将 assert sdkSources.exists() 注释掉。使用 gradle..." }, { "title": "基于Android Studio创建Xposed插件应用", "url": "/posts/%E5%9F%BA%E4%BA%8EAndroid_Studio%E5%88%9B%E5%BB%BAXposed%E6%8F%92%E4%BB%B6%E5%BA%94%E7%94%A8/", "categories": "学习, Xposed学习", "tags": "Xposed, Android Studio", "date": "2020-08-08 19:36:00 +0800", "snippet": "基本环境 Android Studio 安卓模拟器或实体机（安装有Xposed+root或者安装VirtualXposed）创建空白项目File -&amp;gt; New -&amp;gt; New Project -&amp;gt; Empty Activity -&amp;gt; 【配置项目信息】-&amp;gt; Finish修改配置文件配置 app/build.gradle 配置编译SDK版本为 28 ，即将 android 里的 compileSdkVersion 的值修改为 28 。 配置目标SDK版本为 28，即将 android -&amp;..." } ]
